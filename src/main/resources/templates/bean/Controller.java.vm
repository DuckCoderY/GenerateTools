package ${package}${moduleName}.controller;

import com.baomidou.mybatisplus.core.metadata.IPage;
import ${package}${moduleName}.utils.ResponseBean;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import ${package}${moduleName}.entity.${className}Entity;
import ${package}${moduleName}.service.${className}Service;

import java.util.List;
import java.util.Map;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@Api(tags = "${comments}")
@RequestMapping("${classNameLow}")
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classNameLow}Service;

    @GetMapping("/page")
    @ApiOperation("分页查询")
    @ApiImplicitParams({
    #foreach ($column in ${columns})
        @ApiImplicitParam(name = "$column.attrNameLow", value = "${column.comments}", required = false),
    #end
        @ApiImplicitParam(name = "currPage", value = "currPage", required = true),
            @ApiImplicitParam(name = "pageSize", value = "pageSize", required = true),
    })
    public ResponseBean<IPage<${className}Entity>> page(@RequestParam(required = false) Map<String, Object> pram,
                                               @RequestParam(name = "currPage", required = true) int currPage,
                                               @RequestParam(name = "pageSize", required = true) int pageSize) {
        return ResponseBean.success(${classNameLow}Service.page${className}(pram, currPage, pageSize));
    }

    @GetMapping("/list")
    @ApiOperation("列表查询")
    @ApiImplicitParams({
    #foreach ($column in ${columns})
        @ApiImplicitParam(name = "$column.attrNameLow", value = "${column.comments}", required = false),
    #end
})
    public ResponseBean<List<${className}Entity>> list(@RequestParam(required = false) Map<String, Object> ${classNameLow}) {
        return ResponseBean.success(${classNameLow}Service.find${className}List(${classNameLow}));
    }

    @RequestMapping(value = "/saveOrUpdate", method = {RequestMethod.POST, RequestMethod.PUT})
    @ApiOperation("保存或者修改")
    public ResponseBean<${className}Entity> saveOrUpdate(@RequestBody ${className}Entity ${classNameLow}) {
        return ResponseBean.success(${classNameLow}Service.save${className}(${classNameLow}));
    }

    @DeleteMapping("/del")
    @ApiOperation("根据ID删除数据")
    public ResponseBean<Object> del(@RequestParam("ids") List<String> ids) {
        ${classNameLow}Service.delete${className}ById(ids);
        return ResponseBean.success();
    }

    @GetMapping("/findOne/{id}")
    @ApiOperation("根据ID查询数据详细信息")
    public ResponseBean<${className}Entity> findOne(@PathVariable("id") String id) {
        return ResponseBean.success(${classNameLow}Service.find${className}ById(id));
    }

}
